{"version":3,"sources":["layout/Header.js","service/Repository.js","service/AlphaVantageService.js","components/CurrencyPanel.js","components/CurrencyGraph.js","App.js","index.js"],"names":["Header","href","className","Component","Repository","map","Map","key","this","get","from","to","exchangeRate","getExchangeKey","value","console","log","set","reversedKey","reversedValue","result","getDailyKey","delete","AlphaVantageService","props","state","API_KEY","repository","amount","isPresent","getValue","toFixed","API_CALL","fetch","then","res","json","data","Number","saveExchange","err","error","catch","dates","open","high","low","close","push","reverse","saveDaily","info","removeDaily","CurrencyPanel","id","fromCurrency","onChange","onChangeFromCurrency","type","placeholder","min","max","onChangeAmount","toCurrency","onChangeToCurrency","disabled","CurrencyGraph","chartData","days","onChangeDays","bind","onGraphMount","setState","buildChartData","prevProps","prevState","labels","filterData","datasets","label","backgroundColor","borderColor","borderDash","fill","title","display","text","fontSize","fontColor","legend","position","tooltips","scales","yAxes","scaleLabel","labelString","xAxes","arr","slice","Math","length","event","target","options","buildChartOptions","step","App","service","fetchExchangeRate","Promise","resolve","reject","fetchDaily","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aec58b0f.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport '../css/Header.css'\r\n\r\nexport class Header extends Component {\r\n    render() {\r\n        return (\r\n            <nav>\r\n                <ul>\r\n                    <li><a href=\"https://www.secfi.com/\" className=\"left logo\"> </a></li>\r\n                    <li><a href=\"mailto:andremlsantos@protonmail.com?Subject=Next%20call\" className=\"right\">Contact</a></li>\r\n                    <li><a href=\" https://github.com/andremlsantos/secfi-front-end.git\" className=\"right\">GitHub</a></li>\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header\r\n","import React, { Component } from 'react'\r\n\r\nexport class Repository extends Component {\r\n    constructor() {\r\n        super();\r\n\r\n        this.map = new Map();\r\n    }\r\n\r\n    isPresent(key) {\r\n        return this.map.get(key) != null\r\n    }\r\n\r\n    // get values from corresponding key\r\n    getValue(key) {\r\n        return this.map.get(key);\r\n    }\r\n\r\n    // key used to save exchange values\r\n    getExchangeKey(from, to) {\r\n        return `${from}-${to}`;\r\n    }\r\n\r\n    // key used to save daily graph values\r\n    getDailyKey(from, to) {\r\n        return `${from}-daily-${to}`;\r\n    }\r\n\r\n    // when we save exchange rate from Eur to Usd, we can also automatically calculate Usd to Eur\r\n    saveExchange(from, to, exchangeRate) {\r\n        let key = this.getExchangeKey(from, to);\r\n        let value = exchangeRate;\r\n        console.log(\"saving\", key, value);\r\n        this.map.set(key, value);\r\n\r\n        let reversedKey = this.getExchangeKey(to, from);\r\n        let reversedValue = 1 / exchangeRate;\r\n        console.log(\"saving\", reversedKey, reversedValue);\r\n        this.map.set(reversedKey, reversedValue);\r\n    }\r\n\r\n    // saves daily graph values to map\r\n    saveDaily(from, to, result) {\r\n        let key = this.getDailyKey(from, to);\r\n        console.log(\"Saving \" + key + \" to daily map \")\r\n        this.map.set(key, result);\r\n    }\r\n\r\n    // remove daily graph value from map\r\n    removeDaily(from, to) {\r\n        this.map.delete(this.getDailyKey(from, to));\r\n    }\r\n\r\n    // removes exchange value from map\r\n    removeExchange(from, to) {\r\n        this.map.delete(this.getExchangeKey(from, to));\r\n    }\r\n}\r\n\r\nexport default Repository\r\n","import React, { Component } from 'react'\r\nimport Repository from './Repository';\r\n\r\nexport class AlphaVantageService extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            API_KEY: \"0VY8POTUN3UDETPX\"\r\n        }\r\n\r\n        this.repository = new Repository();\r\n    }\r\n\r\n    // For the exchange\r\n    async fetchExchangeRate(from, to, amount) {\r\n        let key = this.repository.getExchangeKey(from, to);\r\n\r\n        if (from === to) {\r\n            // we don't need to calculate anything, just return amount\r\n            console.log(\"from == to, returning amount\");\r\n            return amount;\r\n        } else if (this.repository.isPresent(key)) {\r\n            // we can grab the values already saved\r\n            console.log(\"values already requested\");\r\n            let result = this.repository.getValue(key) * amount;\r\n            return result.toFixed(4);\r\n        } else {\r\n            let API_CALL = `https://www.alphavantage.co/query?function=CURRENCY_EXCHANGE_RATE&from_currency=${from}&to_currency=${to}&apikey=${this.state.API_KEY}`;\r\n\r\n            return fetch(API_CALL)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    try {\r\n                        let exchangeRate = Number(data[\"Realtime Currency Exchange Rate\"][\"5. Exchange Rate\"]);\r\n                        let result = amount * exchangeRate;\r\n\r\n                        // save value\r\n                        console.log(\"saving \" + key + \"  to map\")\r\n                        this.repository.saveExchange(from, to, exchangeRate);\r\n\r\n                        return result.toFixed(4);\r\n                    } catch (err) {\r\n                        console.error(\"Thank you for using Alpha Vantage! Our standard API call frequency is 5 calls per minute and 500 calls per day.\");\r\n                        return amount;\r\n                    }\r\n                })\r\n                .catch(err => console.error(err));\r\n        }\r\n    }\r\n\r\n    // For the graph\r\n    async fetchDaily(from, to) {\r\n        let key = this.repository.getDailyKey(from, to);\r\n\r\n        if (this.repository.isPresent(key)) {\r\n            // we already did request, lets return values\r\n            console.log(\"returning old values from daily\");\r\n            return this.repository.getValue(key);\r\n        } else {\r\n            let API_CALL = `https://www.alphavantage.co/query?function=FX_DAILY&from_symbol=${from}&to_symbol=${to}&outputsize=compact&apikey=${this.state.API_KEY}`\r\n            let dates = [];\r\n            let open = [];\r\n            let high = [];\r\n            let low = [];\r\n            let close = [];\r\n\r\n            return fetch(API_CALL)\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    if (data[\"Time Series FX (Daily)\"] != null) {\r\n                        for (var key in data[\"Time Series FX (Daily)\"]) {\r\n                            dates.push(key);\r\n                            open.push(data[\"Time Series FX (Daily)\"][key][\"1. open\"]);\r\n                            high.push(data[\"Time Series FX (Daily)\"][key][\"2. high\"]);\r\n                            low.push(data[\"Time Series FX (Daily)\"][key][\"3. low\"]);\r\n                            close.push(data[\"Time Series FX (Daily)\"][key][\"4. close\"]);\r\n                        }\r\n\r\n                        let result = {\r\n                            dates: dates.reverse(),\r\n                            open: open.reverse(),\r\n                            high: high.reverse(),\r\n                            low: low.reverse(),\r\n                            close: close.reverse()\r\n                        }\r\n\r\n                        this.repository.saveDaily(from, to, result);\r\n                        return result;\r\n                    } else {\r\n                        // Problems with request, we remove the values...\r\n                        console.info(\"Removing key \" + this.repository.getDailyKey(from, to) + \" due problems\");\r\n                        this.repository.removeDaily(from, to);\r\n                        // return default value EUR: EUR\r\n                        return this.repository.getValue(this.repository.getDailyKey(\"EUR\", \"EUR\"));\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.error(err)\r\n                });\r\n        }\r\n    }\r\n}\r\n\r\nexport default AlphaVantageService\r\n","import React, { Component } from 'react'\r\nimport AlphaVantageService from '../service/AlphaVantageService'\r\nimport '../css/CurrencyPanel.css'\r\n\r\nexport class CurrencyPanel extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"from_currency_panel\">\r\n                    <select id=\"from_currency_select\" value={this.props.fromCurrency} onChange={this.props.onChangeFromCurrency}>\r\n                        <option value=\"AED\">AED</option>\r\n                        <option value=\"ARS\">ARS</option>\r\n                        <option value=\"AUD\">AUD</option>\r\n                        <option value=\"BGN\">BGN</option>\r\n                        <option value=\"BRL\">BRL</option>\r\n                        <option value=\"BSD\">BSD</option>\r\n                        <option value=\"CAD\">CAD</option>\r\n                        <option value=\"CHF\">CHF</option>\r\n                        <option value=\"CLP\">CLP</option>\r\n                        <option value=\"CNY\">CNY</option>\r\n                        <option value=\"COP\">COP</option>\r\n                        <option value=\"CZK\">CZK</option>\r\n                        <option value=\"DKK\">DKK</option>\r\n                        <option value=\"DOP\">DOP</option>\r\n                        <option value=\"EGP\">EGP</option>\r\n                        <option value=\"EUR\">EUR</option>\r\n                        <option value=\"FJD\">FJD</option>\r\n                        <option value=\"GBP\">GBP</option>\r\n                        <option value=\"GTQ\">GTQ</option>\r\n                        <option value=\"HKD\">HKD</option>\r\n                        <option value=\"HRK\">HRK</option>\r\n                        <option value=\"HUF\">HUF</option>\r\n                        <option value=\"IDR\">IDR</option>\r\n                        <option value=\"ILS\">ILS</option>\r\n                        <option value=\"INR\">INR</option>\r\n                        <option value=\"ISK\">ISK</option>\r\n                        <option value=\"JPY\">JPY</option>\r\n                        <option value=\"KRW\">KRW</option>\r\n                        <option value=\"KZT\">KZT</option>\r\n                        <option value=\"MXN\">MXN</option>\r\n                        <option value=\"MYR\">MYR</option>\r\n                        <option value=\"NOK\">NOK</option>\r\n                        <option value=\"NZD\">NZD</option>\r\n                        <option value=\"PAB\">PAB</option>\r\n                        <option value=\"PEN\">PEN</option>\r\n                        <option value=\"PHP\">PHP</option>\r\n                        <option value=\"PKR\">PKR</option>\r\n                        <option value=\"PLN\">PLN</option>\r\n                        <option value=\"PYG\">PYG</option>\r\n                        <option value=\"RON\">RON</option>\r\n                        <option value=\"RUB\">RUB</option>\r\n                        <option value=\"SAR\">SAR</option>\r\n                        <option value=\"SEK\">SEK</option>\r\n                        <option value=\"SGD\">SGD</option>\r\n                        <option value=\"THB\">THB</option>\r\n                        <option value=\"TRY\">TRY</option>\r\n                        <option value=\"TWD\">TWD</option>\r\n                        <option value=\"UAH\">UAH</option>\r\n                        <option value=\"USD\">USD</option>\r\n                        <option value=\"UYU\">UYU</option>\r\n                        <option value=\"VND\">VND</option>\r\n                        <option value=\"ZAR\">ZAR</option>\r\n                    </select>\r\n                    <input type=\"number\" id=\"from_amount\" placeholder=\"1\" min=\"1\" max=\"100\" onChange={this.props.onChangeAmount} />\r\n                </div>\r\n\r\n                <div className=\"middle_panel\">\r\n                    <div className=\"result\">\r\n                        <p>{this.props.amount} {this.props.fromCurrency} = {this.props.result} {this.props.toCurrency} </p>\r\n                    </div>\r\n                    {/* <div className=\"submit\" onClick={this.props.onGraphMount}>\r\n                        <p>Update</p>\r\n                    </div> */}\r\n                </div>\r\n\r\n                <div className=\"to_currency_panel\">\r\n                    <select id=\"to_currency_select\" value={this.props.toCurrency} onChange={this.props.onChangeToCurrency}>\r\n                        <option value=\"AED\">AED</option>\r\n                        <option value=\"ARS\">ARS</option>\r\n                        <option value=\"AUD\">AUD</option>\r\n                        <option value=\"BGN\">BGN</option>\r\n                        <option value=\"BRL\">BRL</option>\r\n                        <option value=\"BSD\">BSD</option>\r\n                        <option value=\"CAD\">CAD</option>\r\n                        <option value=\"CHF\">CHF</option>\r\n                        <option value=\"CLP\">CLP</option>\r\n                        <option value=\"CNY\">CNY</option>\r\n                        <option value=\"COP\">COP</option>\r\n                        <option value=\"CZK\">CZK</option>\r\n                        <option value=\"DKK\">DKK</option>\r\n                        <option value=\"DOP\">DOP</option>\r\n                        <option value=\"EGP\">EGP</option>\r\n                        <option value=\"EUR\">EUR</option>\r\n                        <option value=\"FJD\">FJD</option>\r\n                        <option value=\"GBP\">GBP</option>\r\n                        <option value=\"GTQ\">GTQ</option>\r\n                        <option value=\"HKD\">HKD</option>\r\n                        <option value=\"HRK\">HRK</option>\r\n                        <option value=\"HUF\">HUF</option>\r\n                        <option value=\"IDR\">IDR</option>\r\n                        <option value=\"ILS\">ILS</option>\r\n                        <option value=\"INR\">INR</option>\r\n                        <option value=\"ISK\">ISK</option>\r\n                        <option value=\"JPY\">JPY</option>\r\n                        <option value=\"KRW\">KRW</option>\r\n                        <option value=\"KZT\">KZT</option>\r\n                        <option value=\"MXN\">MXN</option>\r\n                        <option value=\"MYR\">MYR</option>\r\n                        <option value=\"NOK\">NOK</option>\r\n                        <option value=\"NZD\">NZD</option>\r\n                        <option value=\"PAB\">PAB</option>\r\n                        <option value=\"PEN\">PEN</option>\r\n                        <option value=\"PHP\">PHP</option>\r\n                        <option value=\"PKR\">PKR</option>\r\n                        <option value=\"PLN\">PLN</option>\r\n                        <option value=\"PYG\">PYG</option>\r\n                        <option value=\"RON\">RON</option>\r\n                        <option value=\"RUB\">RUB</option>\r\n                        <option value=\"SAR\">SAR</option>\r\n                        <option value=\"SEK\">SEK</option>\r\n                        <option value=\"SGD\">SGD</option>\r\n                        <option value=\"THB\">THB</option>\r\n                        <option value=\"TRY\">TRY</option>\r\n                        <option value=\"TWD\">TWD</option>\r\n                        <option value=\"UAH\">UAH</option>\r\n                        <option value=\"USD\">USD</option>\r\n                        <option value=\"UYU\">UYU</option>\r\n                        <option value=\"VND\">VND</option>\r\n                        <option value=\"ZAR\">ZAR</option>\r\n                    </select>\r\n                    <input disabled type=\"number\" id=\"from_ammount\" placeholder={this.props.result} min=\"1\" max=\"100\" />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrencyPanel\r\n","import React, { Component } from 'react'\r\nimport Slider from '@material-ui/core/Slider';\r\nimport { Line } from 'react-chartjs-2';\r\nimport '../css/CurrencyGraph.css'\r\n\r\nexport class CurrencyGraph extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            chartData: {},\r\n            days: \"30\"\r\n        }\r\n\r\n        this.onChangeDays = this.onChangeDays.bind(this);\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.onGraphMount()\r\n            .then(result => {\r\n                this.setState({\r\n                    chartData: this.buildChartData(result)\r\n                });\r\n            })\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.fromCurrency !== this.props.fromCurrency || prevProps.toCurrency !== this.props.toCurrency) {\r\n            this.props.onGraphMount()\r\n                .then(result => {\r\n                    this.setState({\r\n                        chartData: this.buildChartData(result)\r\n                    });\r\n                })\r\n                .catch(err => {\r\n                    console.error(\"Something happen andre?\")\r\n                })\r\n        }\r\n    }\r\n\r\n    buildChartData(result) {\r\n        return {\r\n            labels: this.filterData(result.dates, this.state.days),\r\n            datasets: [\r\n                {\r\n                    label: 'Close',\r\n                    data: this.filterData(result.close, this.state.days),\r\n                    backgroundColor: [\r\n                        'rgba(255, 99, 132, 0.05)'\r\n                    ],\r\n                    borderColor: 'rgba(255, 99, 132, 0.8)',\r\n                    borderDash: [1],\r\n                    fill: false\r\n\r\n                },\r\n                {\r\n                    label: 'Open',\r\n                    data: this.filterData(result.open, this.state.days),\r\n                    backgroundColor: [\r\n                        'rgba(23, 99, 132, 0.05)'\r\n                    ],\r\n                    borderColor: 'rgba(23, 99, 132, 0.8)',\r\n                    borderDash: [3]\r\n                },\r\n                {\r\n                    label: 'High',\r\n                    data: this.filterData(result.high, this.state.days),\r\n                    backgroundColor: [\r\n                        'rgba(44, 173, 221, 0.05)'\r\n                    ],\r\n                    borderColor: 'rgba(44, 173, 221, 0.8)',\r\n                    borderDash: [7],\r\n                },\r\n                {\r\n                    label: 'Low',\r\n                    data: this.filterData(result.low, this.state.days),\r\n                    backgroundColor: [\r\n                        'rgba(170, 161, 17, 0.05)'\r\n                    ],\r\n                    borderColor: 'rgba(170, 161, 17, 0.8)',\r\n                    borderDash: [5],\r\n                    fill: false\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    buildChartOptions() {\r\n        return {\r\n            title: {\r\n                display: true,\r\n                text: this.props.fromCurrency + \" vs \" + this.props.toCurrency,\r\n                fontSize: 25,\r\n                fontColor: '#0E6D90'\r\n            },\r\n            legend: {\r\n                display: true,\r\n                position: \"right\",\r\n                labels: {\r\n                    fontColor: '#0E6D90'\r\n                }\r\n            },\r\n            tooltips: {\r\n                display: true\r\n            },\r\n            scales: {\r\n                yAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Value',\r\n                        fontColor: '#0E6D90',\r\n                        fontSize: 20\r\n                    }\r\n                }],\r\n                xAxes: [{\r\n                    scaleLabel: {\r\n                        display: true,\r\n                        labelString: 'Time',\r\n                        fontColor: '#0E6D90',\r\n                        fontSize: 20\r\n                    }\r\n                }]\r\n            }\r\n        }\r\n    }\r\n\r\n    // return last x elements in array\r\n    filterData(arr, amount) {\r\n        return arr.slice(Math.max(arr.length - amount, 0));\r\n    }\r\n\r\n    onChangeDays(event) {\r\n        this.setState({\r\n            days: event.target.value\r\n        })\r\n        this.props.onGraphMount()\r\n            .then(result => {\r\n                this.setState({\r\n                    chartData: this.buildChartData(result)\r\n                });\r\n            })\r\n            .catch(err => {\r\n                console.error(\"Something happen andre?\")\r\n            })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <Line\r\n                    data={this.state.chartData}\r\n                    options={this.buildChartOptions()}\r\n                />\r\n                <div className=\"inputContainer\">\r\n                    <input type=\"range\" onChange={this.onChangeDays} step=\"10\" min=\"10\" max=\"100\" value={this.state.days} />\r\n                    <span>{this.state.days}</span>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CurrencyGraph\r\n","import React, { Component } from 'react';\nimport '../src/css/App.css';\nimport Header from './layout/Header';\nimport CurrencyPanel from './components/CurrencyPanel';\nimport AlphaVantageService from '../src/service/AlphaVantageService'\nimport CurrencyGraph from './components/CurrencyGraph';\n\nexport class App extends Component {\n  constructor() {\n    super();\n\n    // state\n    this.state = {\n      fromCurrency: 'EUR',\n      toCurrency: 'EUR',\n      amount: 1,\n      result: 1,\n      dates: [],\n      open: [],\n      high: [],\n      low: [],\n      close: []\n    }\n\n    // binds\n    this.onChangeFromCurrency = this.onChangeFromCurrency.bind(this);\n    this.onChangeToCurrency = this.onChangeToCurrency.bind(this);\n    this.onChangeAmount = this.onChangeAmount.bind(this);\n    this.onGraphMount = this.onGraphMount.bind(this);\n\n    // service\n    this.service = new AlphaVantageService();\n  }\n\n  onChangeFromCurrency(event) {\n    this.setState({\n      fromCurrency: event.target.value\n    });\n\n    this.service.fetchExchangeRate(event.target.value, this.state.toCurrency, this.state.amount)\n      .then(result => {\n        this.setState({\n          result: result\n        })\n      })\n  }\n\n  onChangeToCurrency(event) {\n    this.setState({\n      toCurrency: event.target.value\n    });\n\n    this.service.fetchExchangeRate(this.state.fromCurrency, event.target.value, this.state.amount)\n      .then(result => {\n        this.setState({\n          result: result\n        })\n      })\n  }\n\n  onChangeAmount(event) {\n    this.setState({\n      amount: event.target.value\n    });\n\n    this.service.fetchExchangeRate(this.state.fromCurrency, this.state.toCurrency, event.target.value)\n      .then(result => {\n        this.setState({\n          result: result\n        })\n      })\n  }\n\n  async onGraphMount() {\n    return new Promise((resolve, reject) => {\n      this.service.fetchDaily(this.state.fromCurrency, this.state.toCurrency)\n        .then(result => {\n          this.setState({\n            dates: result.dates,\n            open: result.open,\n            high: result.high,\n            low: result.low,\n            close: result.close\n          })\n          resolve(result);\n        })\n        .catch(err => reject(err));\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <CurrencyPanel\n          fromCurrency={this.state.fromCurrency}\n          toCurrency={this.state.toCurrency}\n          amount={this.state.amount}\n          result={this.state.result}\n          onGraphMount={this.onGraphMount}\n          onChangeFromCurrency={this.onChangeFromCurrency}\n          onChangeToCurrency={this.onChangeToCurrency}\n          onChangeAmount={this.onChangeAmount}\n        ></CurrencyPanel>\n        <CurrencyGraph\n          onGraphMount={this.onGraphMount}\n          fromCurrency={this.state.fromCurrency}\n          toCurrency={this.state.toCurrency}\n          dates={this.state.dates}\n          open={this.state.open}\n          high={this.state.high}\n          close={this.state.close}\n        ></CurrencyGraph>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../src/css/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}